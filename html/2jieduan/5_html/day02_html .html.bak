<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0,minimum-scale=1.0,user-scalable=0" />
    <title></title>
    <style>
		div#main_title{
			text-align:center;
			font-size:60px;
			font-weight:bold;
		}
		div.box{
			border:2px solid black;
			margin:20px 0;
			border-radius:10px;
			width:100%;
		}
		img{
			display:inline-block;
			max-width:100%;
		}
    </style>
    <script>
        
    </script>
</head>
<body>
<div id="main_title">day02_html</div>

<div class="box">
<h1>六.图像和链接</h1>
<pre>
1.图像的使用
	< img >
	属性
	src="url/图片资源路径"
	ex：< img src="图片资源路径" >
2.URL
	1.URL是什么
		Uniform Resource Locator 统一资源定位器
		就是路径
	2.绝对路径
		完整的路径
		协议+主机名称+文件目录结构+文件具体的名称
		使用场合：使用网络资源的时候，使用绝对路径
		使用网络资源图片
		优点：节省服务器本地存储空间
		缺点：资源不稳定
		绝对路径使用本地的资源，是从最高盘符开始查找
		c:\img\08.png
		但是本服务器资源，在项目中，不能用绝对路径
	3.相对路径
	<img src="2_01.png"/>
		使用本服务器资源，用相对路径
		1.同级目录资源
			直接使用资源名称 src="08.png"
		2.兄弟文件夹的子元素
			直接使用兄弟文件夹的名称，在用/调用资源名称
			src="img/08.png"
		3.父级目录中资源
			先使用../返回上一级，在引用资源名称
			src="../08.png"
3.属性
	src：source 源，资源路径
	alt： 图片错误时，显示的文本
	title：鼠标悬停时显示的文本
	width：设置图片的宽度
	height：设置图片的高度
	如果设置宽高比，不符合图片原始宽高比。
	图片会产生失真效果
	解决图片失真效果：
	一般情况下，width和height只设置一个，让另外一个自动适应
	练习
		01_ex.html
		页面中引入6张图片
		1.图片与页面是兄弟关系
		2.图片是页面的兄弟的儿子
		3.图片是页面的兄弟的儿子的儿子
		4.图片是页面父亲的兄弟
		5.图片是页面的父亲的兄弟的儿子的儿子
		6.图片是页面父亲的父亲的兄弟

4.链接
	1.语法
	< a href="" >< /a >
	属性：href 链接路径
		  target 指定打开链接的方式
			   取值 _self 默认值，在当前页面打开新网页
					_blank 在新的页面打开网页
	2.a标签的其它表现形式
	   1.新建邮件，配合windows的邮件软件使用
		 < a href="mailto:cheng@t.com" >发邮件< /a >
	   2.执行js
		< a href="javascript:show()" >执行js< /a >
	   3.下载
		< a href="1.zip" >下载< /a >
	   4.返回页面顶部
		< a href="#" >返回页面顶部< /a >
	3.锚点
		什么是锚点
		锚点是网页中的一个记号
		可以通过超链接的方式，链接到锚点，让页面跳转到锚点位置显示
		使用锚点
		1.定义锚点
		  第一种方式：任何标签的id中写锚点名称
		  < Any id="锚点名称" > < / Any >
		  第二种方式：a标签的name属性中写锚点名称
		  < a name="锚点名称" >< /a >
		2.链接到锚点
		  < a href="#锚点名称" >< /a >
		3.链接到其它页面的锚点
		  < a href="其它页面的url#锚点名称" >< /a >
		  < a href="02_a.html#hl" >葫芦娃< /a >
</pre>
</div>

<div class="box">
<h1>七.表格</h1>
<pre>
1.语法
早期table用于布局
由于效率低下，后来被淘汰，使用div+css的布局
表格现在就一个单纯的作用---显示数据
< table >    表格
  < tr >     行  table row
     < td >< /td >  列 table data
     ....
  < /tr >
  ....
< /table >
属性
	table的属性
	width="300px"   表格的宽度
	height="300px"  表格的高度
	border="1px"    表格的边框
	align="left/center/right"   表格的水平对齐方式
	bordercolor="red" 边框颜色
	bgcolor="yellow"  背景颜色
	cellpadding 单元格内边距，内容到边框的距离
	cellspacing  单元格的外边距，边框与边框的距离
练习：
03_ex.html
	3行3列的表格，宽高400px*400px
	背景颜色pink，边框为2px 表格居中显示
	表格内边距5px 外边距10px
	tr的属性
	bgcolor="yellow"  背景颜色
	align="right"  表格这一行的内容水平对齐方式
	valign表格这一行的内容垂直对齐方式
		  取值  top/middle/bottom
	td的属性
	width="200px" 
	height="200px" 
	align="right"   内容的水平对齐方式
	valign="bottom" 内容的垂直对齐方式
	bgcolor="red"
	colspan  跨列
	rowspan  跨行

2. 不规则的表格
	1.跨列：colspan
		从指定单元格位置处开始，横向向右合并n个单元格(n包括自己)，被合并的单元格要删除
	2.跨行
		从指定单元格位置处开始，纵向向下合并n个单元格(n包含自己)，被合并的单元格要删除
	3.可选标记
		1.表格的标题
			< caption >< /caption >
			如果要设置标题，caption必须放在< table >之后
		2.行/列的标题
			< th >< /th >,td的属性，th都可以用
			th的特点：文字加粗，水平居中
4.表格的复杂应用
	1.我们制作的表格，浏览器解析的时候会自动添加上<tbody></tbody>标签
		行分组：可以将连续的几行，划分到同一个组中，进行统一的管理。
		1.表头< thead >< /thead >
		2.表主体< tbody >< /tbody >
		3.表脚< tfoot >< /tfoot >
	< table >
	  < thead >
		< tr>< th >< /th >< /tr >
		< tr >< th >< /th >< /tr >
	  < /thead >
	  < tbody >
		< tr >...< /tr >
		< tr >...< /tr >
		< tr >...< /tr >
	  < /tbody >
	  < tfoot >
	   < tr >< /tr >
	  < /tfoot >
	< /table >
	2.表格的嵌套
		表格中所有的嵌套，都只能放在td中完成

</div>

<div class="box">
<h1>八.列表（重点*******）</h1>
<pre>
。。。。。。。。。。。。。。。。。。。

</pre>


</div>

<div class="box">
<h1>四.HTML的文档结构</h1>
<pre>
1.html文档的构成
	1.文档类型声明
	<!doctype html>
	告诉浏览器，解析运行本篇代码，使用h5的规则解析
	2.网页的结构
	<html></html>
	表示网页的开始和结束。一个html文件中只能有一对html标签
	<!doctype html>
	<html>
		<head></head> 网页头部，定义网页的信息
		<body></body> 网页主体，展示内容
	</html>
	3.head标签，定义网页的信息
		1.<meta> 元数据标签
		<meta charset="utf-8">
		<meta name="description" content="描述内容">
		<meta name="Keywords" content="关键字">
		2.head中其它标签
		<title></title> 网页标题
		<script></script> 编写js或者引用js文件
		<style></style> css中定义内部样式
		<link>引入外部css样式
	4.body元素
		指定网页的主体
		<body></body>
		属性：bgcolor  body的背景颜色，取值颜色合法值
			  text body的文本颜色，取值颜色的合法值
		练习：01_ex.html
		编写完整的html页面结构








</pre>

</div>

<div class="box">
<h1>五.文本标记(重点***)</h1>
 <pre>
1.标题元素
	在页面中以醒目的方式显示文本
	< h1 >< /h1 >
	....
	< h6 >< /h6 >   
	特点：1.字体大小有变化  h1最大，h6最小
		  2.字体加粗 
		  3.单独成行，上下有垂直间距
	属性：align 设置标记内容水平对齐方式
		  取值：left/center/right
2.段落标记
	< p >< /p > 以突出的形式表示一段文字
	特点：1单独成行
		  2.上下有垂直间距
	属性：align:left/cener/right
3.换行标记
	空格折叠现象：在html中，文本中不管有多少个空格和回车，都会被浏览器解析成一个空格显示
	< br > 或者 < br/ >
4.特殊字符(实体)
	& nbsp;  空格
	& lt;   <    
	& gt;  > 
	& times； X
	& reg; 商标注册 ®
	& copy；版权 ©
	& yen;
5.分割线，水平线
	< hr >  或者  < hr/ >
	属性  
	size="5px"  取值px为单位的数字，水平线的粗细
	width="50%"  取值px或者%,水平线的宽度
	align="left"   left/center/right
	color="blue" 取值为合法颜色值
6.预格式化
	< pre >< /pre >
	保留html代码中的回车和空格效果
7.文本样式标签
	< em >< /em >         < i >< /i >   斜体
	< strong >< /strong >  < b >< /b >  加粗
	< del >< /del >         < s >< /s >  删除线
	< u >< /u >  下划线
	< sup >< /sup > 上标
	< sub >< /sub > 下标
8.分区元素--不写样式的分区元素，是看不见的。
	1.块分区< div >< /div >
		用于页面布局  
	2.行分区< span < /span >
		为文本添加样式的时候用span
9.元素的显示方式
	1.块级元素
		元素独立成行，在页面中从上往下排列
		ex:h1~h6  p  div  pre
	2.行内元素(行级元素)
		多个行内元素在一行中显示，从左往右排列
		ex:span i em strong b u sub sup del s
	3.行内块
		表现方式是行内元素(多个行内块可以共用一行)
		但是具有块级元素的其它特征(宽高，边距)还没学
		ex:input
	4.table 
 </pre>
</div>

<div class="box">
<h1>六.图形和链接</h1>
<pre> 
1.图形图像
	< img/ > 或者 < img >
	属性：src 引用图片资源 url
	*.html和图片是兄弟关系，直接在src中写图片名称
	练习
<img src="02.png"/>

EditPlus快捷键设置总结
加载1.key。1.key eclipse的开发快捷键
1.设置代码补全和lorem的补全
	在zc下，把第二个和第三个勾勾上
2.设置tab空两个格
<img src="03.png"/>
	把默认的4变成2
3.导入1.key
<img src="04.png"/>
	选择1.key就可以使用了
4.常用快捷键
	ctrl+d  删除当前行
	alt+↓/↑   移动当前行下移/上移
	ctrl+alt+↓ 复制当前行
5.打开浏览器运行html的快捷方式
	ctrl+b 打开浏览器
<img src="05.png"/>
6.添加注释快捷方式
	ctrl+/

</pre>
</div>

<div class="box">
<h1>作业:</h1>
<pre> 
1.完成nodejs6个接口的编写
2. web第二阶段练习效果图示\day01_html_01作业
<img src="06.png"/>

</pre>
</div>



</body>
</html>