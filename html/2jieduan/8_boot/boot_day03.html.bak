<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0,minimum-scale=1.0,user-scalable=0" />
    <title></title>
    <link rel="stylesheet" href="../2jie.css"/>
    <script>
        
    </script>
</head>
<body>
<div id="main_title">day03_boot</div>
day16
<div class="fa">
<h1>四.全局css</h1>
<div class="box">
<pre>
6.辅助类
 ⑦尺寸
		w-25/50/75/100
		h-25/50/75/100
		如果需要其他尺寸，需要手写css
		mw-100  mh-100
7.栅格布局 （重点*********************）
①web页面中的布局方式，一般有三种
		table布局					div+css					Boot的栅格布局
		简单，易控制				语义正确，渲染效率高	简单，易控制。语义正确，渲染效率高，支持响应式
		语言错误，渲染效率低		控制起来很麻烦			不适用于复杂页面
②栅格的使用
		1.栅格必须在container或者container-fluid中
		2.每一行都是一个row(弹性，主轴是x轴，可以换行，
		 左右-15px外边距)
		3.每一个col自带左右15内边距
③响应式栅格布局
		col-*-n
		*:lg/md/sm/xl
		n:1~12
		在不同的屏幕下，执行不同的列数
		< div class="row" >
			< div class="col-lg-2 col-md-3  col-sm-12" >111< /div >
			< div class="col-lg-8 col-md-9  col-sm-12">222</div>
			< div class="col-lg-2 d-lg-block d-md-none col-sm-12" >333< /div >
		< /div >
④不同屏幕尺寸，向上兼容
		只写小屏，在小屏，中屏，大屏，超大屏，都会应用
		只写中屏，在中屏，大屏，超大屏，都会应用
		只写大屏，大屏，超大屏，都会应用
		只写超大屏，只在超大屏应用
⑤使用.col这个类
		使用.col,不添加数字，自动平局分配占地宽度
		每一个col平局分配空间，col的个数可以超过12个
		使用场合：
		当一行内，元素需要横向现实，元素个数不能被12整除
		每个元素占地空间一样
⑥列偏移
		offset-*-n  源码就是在操作左外边距 margin-left
		*:xl/lg/md/sm
		n:0~11
⑦栅格嵌套
		在一个.col中再写一个row

</pre>
</div>
</div>

<div class="fa">
<h1>五.弹性布局</h1>
<div class="box">
<pre>
		d-block/inline/inline-block/none  display的取值
		d-*-block.....响应式 *：xl/lg/md/sm
		想使用弹性布局，需要在父元素上添加d-flex/d-inline-flex
		创建弹性容器
1.主轴方向
		flex-row/column/row-reverse/column-reverse
响应式设置
		flex-*-row/column/row-reverse/column-reverse
		*:xl/lg/md/sm
2.主轴对齐方式
		justify-content-start/center/end/between/around
响应式设置
		justify-content-*-start/center/end/between/around
		*：xl/lg/md/sm

练习 ul>li boot完成
<img src="3_01.png"/>
</pre>
</div>
</div>

<div class="fa">
<h1>六.表单相关的class</h1>
<div class="box">
<pre>
1.表单元素的排列放向
		form-group  堆叠表单，内部控件垂直显示
		form-inline  内联表单，内部控件横向显示(弹性，x轴)
2.表单控件元素样式
		form-control 对于text,password 基本类
		  块级，w100 字体 背景颜色 边框 圆角 过渡
		col-form-label 设置文本框上下内边距
		col-form-label-lg 上下内边距比较大
		col-form-label-sm 上下内边距比较小

		checkbox的基本类
		form-check-input,绝对定位 
		要配合父元素的 form-check使用

		form-text 块级，有上外边距  15:06~15:21休息
练习：
 <img src="3_02.png"/>
		form-inline可以代替row作为栅格行
		form-inline没有左右-15px的外边距

</pre>
</div>
</div>

<div class="fa">
<h1>七.组件</h1>
<div class="box">
<pre>
		网页中有一些复杂的特殊效果，之前必须使用js,dom,jq
		boot为我们封装好了很多常用的组件，我们可以直接使用。
		方便，快捷。但是如果需要个性化的处理，比较繁琐。
		boot中，大量使用元素的自定义属性，来调用方法
1.下拉菜单
		基本结构
		< div class="dropdown" >
			< button class=" dropdown-toggle"
				  data-toggle="dropdown" >下拉菜单< /button >
			< ul class="dropdown-menu" > < /ul >
		< /div >
		div.dropdown 父级，相对定位
		button.dropdown-toggle  画向下小三角
		ul.dropdown-menu  display:none
		data-toggle="dropdown" 自定义属性的作用
		1.当button被点击的时候激活事件  
		2.自定义属性的值，决定激活哪一个事件 
<img src="3_03"/>
2.按钮组
		< div class="btn-group" >
		  < button >< /button >
		   .....
		< /div >
		外层div的class有以下几个值
		btn-group 横向按钮组
		btn-group-vertical 纵向按钮组
		可以添加 btn-group-lg/sm 调整按钮组的大小
3.信息提示框
		< div class="alert alert-danger alert-dismissible" >
		  < span class="close" data-dismiss="alert"  >
			&times;< /span >
		  提示的信息
		< /div >
		alert 基本类
		alert-danger/warning/.....提示框颜色
		alert-dismissible 为了修饰内部span.close
		.close 右浮动
		data-dismiss="alert" 自定义属性，事件使用alert的方式执行
4.导航
 ①水平导航
		基本结构 ul.nav>li.nav-item>a.nav-link
		< ul class="nav nav-justified" >
		 < li class="nav-item" >
		  < a class="nav-link" >< /a > 
		 < /li >
		< /ul >
		ul.nav 定义了弹性布局，主轴为x
			   那么之前学习的所有的弹性布局的样式都可以用
		.nav-justified>.nav-item 要同时设置，让元素等宽显示
		a.nav-link 块级，设置了hover，focus等样式
 ②选项卡导航
		基本结构
		上层是选项卡
		ul.nav.nav-tab>li.nav-item>a.nav-link
		下层内容
		div.tab-content>div.pane

		ul.nav 变成选项卡添加类 nav-tab
			   nav-tab设置自己的孩子 nav-item nav-link
		a标签添加自定义属性 data-toggle="tab"
			以tab的方式激活事件
			绑定目标元素 a的href属性指向下面内容的id值
		div.tab-content>div.tab-pane配合使用
		   让div.tab-pane都是是display:none
		   然后div.tab-pane要写id，让a标签绑定

		一个事件激活，关注几件事情
		1.激活这个事件的元素是啥  < a >
		2.这个事件以什么方式激活  tab
		3.事件激活后，改变的目标元素是谁
</pre>
</div>
</div>

<div class="fa">
<h1>作业</h1>
<div class="box">
<pre>
	作业1.提高题，完成学子首页1L布局，使用栅格实现6个灰色框,允许手写宽高样式  
		坑：div灰块之间的空白怎么解决
	作业2.使用栅格完成
<img src="3_04.jpg"/>
<img src="3_05.jpg"/>
<img src="3_06.jpg"/>
	3.组件所有demo都敲一遍
</pre>
</div>
</div>


</body>
</html>