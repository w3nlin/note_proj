<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
    <title></title>
<style>


*{
	box-sizing:border-box;
}
img{
			display:inline-block;
			max-width:100%;
			margin:0;
			
		}
#main{
	position:relative;
	width:100%;
}

.part_right{
	width:80%;
	position:absolute;
	right:0;
	top:0;
}
.part_right>div{
border:1px solid red;
width:100%;
/*height:300px;*/
border:20px solid black;
}

.part_right>div>img{

width:100%;
margin:0 auto;
display:inline-block;
}
h2{
	font-size:50px;
	padding-left:20px;
}


.part_left{
	width:20%;
	/*
	position:fixed;
	left:0;
	top:0;
	overflow:auto;
*/
	position:   fixed;
        top:        0;
        bottom:     0;
        left:       0;
        right:      0;
        border:     1px solid black;
        overflow:   hidden;
        background: white;
}
.a_box{
	
	word-wrap: break-word;
	word-break: break-all;
	overflow:auto;

    max-height: 98%;      /*这个词是重点*/
	
}
.a_group{
	
}
.a_group>a{
	display:block;
	margin:10px 0;
}
pre{
		width:100%；
		padding:0;
		white-space: pre-wrap;
		word-wrap: break-word;
		}
</style>
<script src="jquery-1.9.1.min.js"></script>
</head>
<body>
<div id="main">
<div class="part_left">
<h1>canvas_01</h1>
	<div class="a_box">
		<div class="a_group">
			<a href="#d1">1.Canvas标签：</a>
			<a href="#d2">2.Canvas绘制环境：</a>
			<a href="#d3">3.Canvas使用的必要（基本）步骤</a>
			<a href="#d4">4.绘制矩形方块</a>
			<a href="#d5">5.设置绘图</a>
			<a href="#d6">6.边界绘制</a>
			<a href="#d7">7.绘制路径</a>
			<a href="#d8">8.注意点</a>
			<a href="#d9">9.拓展</a>
		</div>
	</div>
</div>
<div class="part_right">
<div>
	<h2 id="d1">1.Canvas标签：</h2>
	<pre>
		< canvas >< /canvas >
	</pre>
</div>
<div>
	<h2 id="d2">2.Canvas绘制环境：</h2>
	<pre>
		getContext(“2d”);//目前支持2d的场景
	</pre>
</div>
<div>
	<h2 id="d3">3.Canvas使用的必要（基本）步骤【这两步写完后就可以进行绘图操作了】:</h2>
	<pre>
		var oC=document.getElementById("c1");//获取canvas对象
		var oGC=oC.getContext("2d");//获取绘制环境

	</pre>
</div>
<div>
	<h2 id="d4">4.绘制矩形方块【rect：矩形，正方形；stroke：划线】:</h2>
	<pre>
		fillRect(L,T,W,H)；//默认显示黑色的填充方块 left，top，【位置】width，height【大小】
			示例：oGC.fillRect（50.5，50.5，100，100）；//50.5的原因：50看上去边框会是2px

		strokeRect(L,T,W,H)；//带边框的方块- - -默认显示1px黑色边框的空心方块
			示例：oGC.stokeRect（50，50，100，100）；

	</pre>
</div>
<div>
	<h2 id="d5">5.设置绘图【属性需要写在方法前才能生效】:</h2>
	<pre>
		fillStyle//填充颜色【属于fillRect（）方法的属性】
			示例：oGC.fillStyle=”red”;// 注意1：fillStyle要和fillRect(L,T,W,H)搭配使用才行；如果用strokeRect(L,T,W,H)将没有效果。。注意2：fillStyle需要写在fillRect（）前面才有效果

		lineWidth//【设置线的宽度】
			示例：oGC. lineWidth =20;

		strokeStyle//边线颜色【属于strokeRect（）方法的属性】
			示例：oGC.stokeStyle=”red”;// 注意1：strokeStyle要和strokeRect(L,T,W,H)搭配使用才行；如果用fillRect(L,T,W,H)将没有效果。。注意2：strokeStyle需要写在strokeRect（）前面才有效果

	</pre>
	
</div>
<div>
	<h2 id="d6">6.边界绘制</h2>
	<pre>
		lineJoin//边界连接点样式【取值：miter（默认）、round(圆角)、bevel（斜切角）】
			例：
			oGC.lineJoin=”round”//默认四个尖角变成圆角
			oGC.lineJoin=”bevel”//斜切角
			lineCap//端点样式【指的是一条直线的两个端点】【就是操作一条直线的端点样式】【取值：butt（默认）、round(圆角)、square（高度多出为宽一半的值）】
			案例：
			id11.lineCap="round";//效果：线条两端变圆
			id11.lineCap="square";//效果：线条两端变长

	</pre>
</div>
<div>
	<h2 id="d7">7.绘制路径</h2>
	<pre>
		beginPath（） //开始绘制路径
		closePath （）//结束绘制路径【连接起点和终点】
		moveTo （）//移动到绘制的新目标点【起点】
		lineTo （）//新的目标点【连线至】

		案例：
		<img src="01.png"/> 
		oGC.beginPath();//这句话写与不写效果一样针对一个绘制的时候，绘制多个的时候不写就会出问题。。有开始和结束相当于一个闭合操作//意思为开始绘制
		oGC.moveTo(200,200);
		oGC.lineTo(250,250);
		oGC.lineTo(300,250);
		oGC.closePath();
		oGC.stroke();//划线【如果这句话写在closePath()前面，则最后一条线将不会被显示出来】【原因：closePath（）是结束闭合的意思，所以它代表连接最后一条线。stroke（）如果写在它前面就证明closePath()这句话还没实现就被描边了，而closePath（）那句话却没有描边】
		oGC.fill();//填充颜色（路径闭合区域），默认黑色

		stroke（）//划线
		fill（）//填充颜色（路径的闭合区域）
		rect（left，top，weidh，height）//矩形区域【画线或者画矩形、图形都需要和画线或填充方法配合使用才能显示效果】
		clearRect（）//删除一个画布的矩形区域
		例：oGC.clearRect（0，0，oC.width，oC.height）；//整个画布都清理掉了
		save（）//保存路径【可以理解为封存区间，只有在这段封存的区间内才能实现某些样式或功能】
		案例【两个相同的三角形，使用fillStyle=“red”两个三角形会同时变红；但是我只想让第一个三角形变红，则把第一个三角形的区域包在save（）和restore（）之间】：
		id11.save();
		id11.fillStyle="red";
		id11.beginPath();
		id11.moveTo(50,50);
		id11.lineTo(75,75);
		id11.lineTo(90,75);
		id11.closePath();
		id11.fill();
		id11.restore();

		id11.beginPath();
		id11.moveTo(100,100);
		id11.lineTo(125,125);
		id11.lineTo(150,125);
		id11.closePath();
		id11.fill();

		restore（）//恢复路径

	</pre>
</div>
<div>
	<h2 id="d8">8.注意点</h2>
	<pre>
		往< canvas >标签内嵌套< span >标签，可以在不支持html5技术的浏览器显示自定义的提示

		例：< canvas >
					< span >不支持canvas的浏览器< span >
			< /canvas >
	</pre>
</div>
<div>
	<h2 id="d9">9.拓展</h2>
	<pre>
		1.Canvas默认宽300px，高150px
		2.宽高要在< canvas >标签内设置，不要在< style >样式标签内设置，写在< style >里是等比例缩放
		3.fill（）和stroke（）需要写在closePath（）之后才能完整描边；而fillStyle（）和strokeStyle（）需要写在beginPath前面才能改变样式
	</pre>
	
</div>


</div>
</div>
</body>

</html>