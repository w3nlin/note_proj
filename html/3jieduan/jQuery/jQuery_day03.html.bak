<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
    <title></title>
<style>


*{
	box-sizing:border-box;
}
img{
			display:inline-block;
			max-width:100%;
			margin:0;
			
		}
#main{
	position:relative;
	width:100%;
}

.part_right{
	width:80%;
	position:absolute;
	right:0;
	top:0;
}
.part_right>div{
border:1px solid red;
width:100%;
/*height:300px;*/
border:20px solid black;
}

.part_right>div>img{

width:100%;
margin:0 auto;
display:inline-block;
}
h2{
	font-size:50px;
	padding-left:20px;
}


.part_left{
	width:20%;
	/*
	position:fixed;
	left:0;
	top:0;
	overflow:auto;
*/
	position:   fixed;
        top:        0;
        bottom:     0;
        left:       0;
        right:      0;
        border:     1px solid black;
        overflow:   hidden;
        background: white;
}
.a_box{
	
	word-wrap: break-word;
	word-break: break-all;
	overflow:auto;

    max-height: 98%;      /*这个词是重点*/
	
}
.a_group{
	
}
.a_group>a{
	display:block;
	margin:10px 0;
}
pre{
		width:100%；
		padding:0;
		white-space: pre-wrap;
		word-wrap: break-word;
		}
</style>
<script src="jquery-1.9.1.min.js"></script>
</head>
<body>
<div id="main">
<div class="part_left">
<h1>jQuery_day03</h1>
	<div class="a_box">
		<div class="a_group">
			<a href="#d1">正课: </a>
			<a href="#d2">1. 事件: </a>
			<a href="#d3">2. 动画:</a>
			<a href="#d4">3. 类数组对象操作:</a>
			<a href="#d5">4. 添加自定义函数:</a>
			<a href="#d6">5. ***封装自定义插件:</a>
		</div>
	</div>
</div>
<div class="part_right">
<div>
	<h2 id="d1">正课: </h2>
	<pre>
		1. 事件: 
		2. 动画:
		3. 类数组对象操作:
		4. 添加自定义函数:
		5. ***封装自定义插件:
	</pre>
</div>
<div>
	<h2 id="d2">1. 事件:</h2>
	<pre>
页面加载后，自动执行: 
  问题1: 如何保证无论js代码写在网页的开头还是结尾，都能正常执行呢？
	  解决1: 将所有的事件绑定代码都写在window.onload=function(){ 中 }
	   比如://当窗口的内容都加载完之后 
			window.onload=function(){
			  //才查找按钮绑定事件
			  $("#btn1").click(function(){
				alert("疼！");
			  })
			}
  问题2: window.onload=function(){}是用赋值方式绑定事件。整个窗口只能绑定一个处理函数。如果多个js文件中都包含window.onload=function(){}，结果只有最后一个会覆盖之前所有。如何让多个js文件中的window.onload=function(){}并存？
	  解决: $(window).on("load",function(){
				  //.addEventListener
		   //可进一步简写为:
		   $(window).load(function()
			 
		   })
  问题3: window.onload必须等待所有网页内容（HTML, JS, CSS, 图片）都加载完才能触发，才能绑定事件。用户有可能等不及要使用元素的功能！
    如何让用户不必等待css和图片，也能提前用上网页功能？
	  解决: jQuery: 
	  //当 DOM树 准备就绪 就提前触发
	   $(document).ready(function(){
		 $("#btn2").click(function(){
			alert("疼！");
		 })
	   })
  结论: 今后绝大多数页面初始化或事件绑定操作，都应该放在DOM树加载完就提前触发。
  简写: 
	   $(function(){
		 $("#btn2").click(function(){
			alert("疼！");
		 })
	   })
  总结: 今后所有jq代码，都应该放在$(function(){ ... })
	   今后见到$(function(){ ... })就是"DOM树加载后就提前执行"的意思
	   从此$(function(){ ... })代替了匿名函数自调成为所有程序的外层容器代码。

 鼠标事件: 
  mouseover 鼠标进入  mouseout 鼠标移出
  问题: mouseover 和mouseout 默认是冒泡的。
	  也就是说反复进出子元素同样会反复触发父元素上的事件
	   且不能用e.stopPropagation()解决，因为事件绑在最外层父元素上。不可能阻止所有子元素上来的冒泡。也不可能给每个子元素都绑定事件阻止冒泡。
  解决: 就希望进出子元素，不再反复触发父元素上的事件
	   jQuery中都是用.mouseenter()和.mouseleave() 代替mouseover和mouseout
  简写: 如果同时绑定鼠标进入和鼠标移出事件时: 
	   jQuery中可只绑定一个: .hover()
		绑定一个.hover()，等效于同时绑定了mouseenter()和mouseleave()
		但是hover中需要2个函数。一个给mouseenter，另一个给mouseleave。
		$("#target")
		.hover(//=mouseenter+mouseleave
			function(){//给mouseenter
				$(this).addClass("hover")
			},
			function(){//给mouseleave
				$(this).removeClass("hover")
			}
		)
  极其特殊的简写: 如果两个处理函数刚好可以改为一致的，则只需要写一个处理函数即可。一个函数即给mouseenter，又给mouselieave
    比如: $("#target")
		.hover(//=mouseenter+mouseleave
			function(){//即给mouseenter又给mouseleave
				$(this).toggleClass("hover")
			}
		)

  模拟触发: 即使没有点击按钮，也可执行按钮上的事件处理函数
	   如何: $(处理函数所在的元素).trigger("事件名")
								 触发
		 //可简写为:             .事件名()

总结: $的原理: 共有四种用法: 
		 1. $("选择器") 创建jQuery对象，并查找DOM元素
		 2. $(DOM元素) 将已经获得的DOM元素包装为jQuery对象
		 3. $("html片段") 创建jQuery对象，同时创建新的DOM元素
		 4. $(function(){ ... }) 绑定事件，在DOM内容加载后就自动触发

  

鄙视题: 你觉得我们公司的官网有哪些可以优化的地方: 
		F12->network->刷新页面
		 看请求次数: >50次，算多的
		   可以说，减少请求次数: 
			1. 用css精灵图，减少图片的张数
			2. 尽量减少ajax请求的次数，尽量一次获得全部元素
		 看个别进度条比较长的文件
		   可以说，降低图片质量，减小图片体积
			   压缩/合并js和css代码，减少代码的文件个数和体积

常用事件列表: 
		click 单击
		dblclick  双击
		change 选中项改变 常用于select元素
		blur 失去焦点
		focus 获得焦点
		keydown 键盘按下未抬起 
		keyup 键盘按键按下后抬起
		mousedown 鼠标按键按下
		mouseenter  鼠标进入元素 代替 DOM中 mouseover
		mouseleave  鼠标移出元素 代替 DOM 中mouseout
		mousemove  鼠标移动事件
		mouseout  DOM中的鼠标移出事件 
		mouseover  DOM中的鼠标移入事件
		mouseup   鼠标按键抬起
		scroll  滚动条发生滚动时触发
		input 文本框中输入文字改变时触发

	</pre>
</div>

<div>
	<h2 id="d3">2. 动画:</h2>
	<pre>
		无
	</pre>
</div>

<div>
	<h2 id="d4">3. 类数组对象操作:</h2>
	<pre>
		无
	</pre>
</div>

<div>
	<h2 id="d5">4. 添加自定义函数: </h2>
	<pre>
		无
	</pre>
</div>

<div>
	<h2 id="d6">5. ***封装自定义插件: </h2>
	<pre>
		无
	</pre>
</div>








</div>
</div>
</body>

</html>