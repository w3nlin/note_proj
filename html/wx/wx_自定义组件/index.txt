一、创建组件（page1内容迁移到comp1组件中）
1.pages目录的同一级新建一个components目录
2.components目录下新建子目录comp1
3.comp1子目录右键新建Component
4.将pages下的页面page1里的内容按部就班到comp1中

二、使用组件（page2使用comp1组件）
5.pages下的页面page2里的page2.json文件需要注册组件
如:1
{
  "navigationBarBackgroundColor": "#fff",
  "navigationBarTitleText": "comp1页面",
  "navigationBarTextStyle": "black",
  "usingComponents": {
    "comp_research": "../../components/comp_research/index"
  }
}
如:2
{
  "usingComponents": {
    "comp1": "../../components/comp1/index"
  }
}
6.wxml使用组件
<comp1/>

三、其他
7.组件导入css (comp1组件中的index.wxss导入其他的css)
@import "../common_wxss/app.wxss";
8.页面与组件的数据传递
page2页面
<comp1 nameId="num1" num="12222" mes_data="{{mes_xcid}}"/>        //page2页面传参
comp1组件接收参数
properties: {      //properties和data同一级
    mes_data:{
      type: String,
      value:0
    }
  },
wxml页面取值，直接{{mes_data}}
js页面取值this.properties.mes_data
9.钩子函数（写在methods:{},的后面）
  created: function () {
    // 组件生命周期函数，在组件实例进入页面节点树时执行，注意此时不能调用setData
    console.log('Component-1 >> created');
  },
  attached: function () {
    // 组件生命周期函数，在组件实例进入页面节点树时执行。
    console.log('Component-1 >> attached');
  },
  ready: function () {
    // 在组件布局完成后执行，此时可以获取节点信息
    console.log('Component-1 >> ready');
  },
  moved: function () {
    // 在组件实例被移动到节点树另一个位置时执行
    console.log('Component-1 >> moved');
  },
  detached: function () {
    // 在组件实例被从页面节点树移除时执行
    console.log('Component-1 >> detached');
  },
  lifetimes: {                                               //所有代码写在lifetimes下的钩子函数才能生效。写在前面如:ready那个函数 无效
    // 组件生命周期声明对象，将组件的生命周期收归到该字段进行声明，
    //原有声明方式仍旧有效，如同时存在两种声明方式，则lifetimes字段内声明方式优先级最高
    created: function () {
      console.log('Component-1 lifetimes >> created');
    },
    attached: function () {
      console.log('Component-1 lifetimes >> attached');
    },
    ready: function () {
      console.log('Component-1 lifetimes >> ready');
    },
    moved: function () {
      console.log('Component-1 lifetimes >> moved');
    },
    detached: function () {
      console.log('Component-1 lifetimes >> detached');
      
    }
  },
